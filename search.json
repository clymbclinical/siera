[{"path":"https://clymbclinical.github.io/siera/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 siera authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://clymbclinical.github.io/siera/articles/Getting_started.html","id":"cdisc-example-json-format","dir":"Articles","previous_headings":"","what":"CDISC example: JSON format","title":"Getting Started","text":"get started example ingesting ARS JSON metadata,ingest example JSON ARS file meta-programme ready--run R scripts, produce ARDs. R programs created, can individually run, provided ADaM datasets location provided readARS function.","code":"# Path to the the ARS JSON File.  json_path <- ARS_example(\"ARS_V1_Common_Safety_Displays.json\")  # Path to a folder which will contain the meta-programmed R scripts (feel free to update  # to a more suitable path) output_folder <- tempdir()  # this folder contains ADaM datasets to produce ARD (we will use temporary  # directory tempdir(), but feel free to download the ADaMs required and use the location they are stored in. # This can be done with e.g. dirname(ARS_example(\"ADSL.csv\")) ADaM_folder <- tempdir()  # run the readARS function with these 3 parameters.  This creates R scripts (1 for each output in output_folder) readARS(json_path, output_folder, ADaM_folder, example = TRUE)"},{"path":"https://clymbclinical.github.io/siera/articles/Getting_started.html","id":"cdisc-example-xlsx-format-with-cards-functions-to-handle-operations","dir":"Articles","previous_headings":"","what":"CDISC example: xlsx format, with cards functions to handle operations","title":"Getting Started","text":"starting example, helpful first discussion composition ARS metadata (xlsx representation, particular), use cards functions.","code":""},{"path":"https://clymbclinical.github.io/siera/articles/Getting_started.html","id":"reading-in-excel-ars-metadata---what-to-expect","dir":"Articles","previous_headings":"CDISC example: xlsx format, with cards functions to handle operations","what":"Reading in Excel ARS metadata - what to expect","title":"Getting Started","text":"ARS metadata represented Excel contains ARS information Reporting Event. divided Excel Worksheets, roughly mapped/equivalent official JSON ARS representation classes (example can found ). purpose automating Analysis Results using siera, subset multiple Excel Worksheets contain key information. include: MainListOfContents (links outputs respective analyses) OtherListsOfContents (contains Output metadata) DataSubsets (filters data individual analyses) AnalysisSets (filters data get Population Set Output) AnalysisGroupings (groups data according analysis specifications) Analyses (contains linking information components required calculation results) AnalysisMethods (describes operations performed data get results) AnalysisMethodCodeTemplate (contains dynamically written R code perform AnalysisMethod) AnalysisMethodCodeParameters (populates AnalysisMethodCodeTemplate Analysis information)","code":""},{"path":"https://clymbclinical.github.io/siera/articles/Getting_started.html","id":"a-note-on-example-code-used-in-analysismethodcodetemplate-using-cards-package","dir":"Articles","previous_headings":"CDISC example: xlsx format, with cards functions to handle operations","what":"A note on example code used in AnalysisMethodCodeTemplate: using “cards” package","title":"Getting Started","text":"powerful aspect ARS model, dynamic code can supplied part metadata evaluated either 1. Output level, 2. Analysis level, 3. AnalysisMethod level (information , see PHUSE paper). latter case implemented making use AnalysisMethodCodeTemplate AnalysisMethodCodeParameters classes metadata. user supplies dynamic R code (option making use parameters referring metadata pieces), executed perform relevant AnalysisMethod operations. example ARS metadata Excel shipped package, R code used AnalysisMethodCodeTemplate aligned cards R package (information ). cards package reputable R package consisting wrappers various statistical functions, producing results consistent ARD format. simple example function ard_continuous cards package used AnalysisMethodCodeTemplate class accompanying Excel ARS metadata example shipped package: example AnalysisMethodCodeTemplate code particular AnalysisMethod (summary statistics continuous variable), ard_continuous function cards package used. Notice, however, two parameters used code: ‘byvariables_here’, ‘analysisvariable_here’. example placeholder names, replaced actual variables, depending context Analysis. example, ‘byvariables_here’ replaced TRT01A, ‘analysisvariable_here’ replaced AGE, ARD summary statistics AGE Treatment. code, however, reused summary statistics e.g. HEIGHT another Analysis, ‘analysisvariable_here’ replaced HEIGHT. dynamically applied within readARS_xl function generating R scripts using siera. order facilitate use placeholders replacement actual values metadata, several “constructs” defined readARS_xl function, available user call AnalysisMethodCodeTemplate AnalysisMethodCodeParameters classes metadata. constructs either simple variables datasets defined metadata, complex, dynamic constructs various metadata pieces, inserted specific cards functions, pre-processing steps. list defined constructs examples shipped package, can accessed : readARS function reads completed ARS metadata Excel file, generates R scripts Output defined file. example can done using ready--use ARS metadata Excel file: ’ve followed along far, now 5 R scripts (named ARD_Out14-1-1.R, ARD_Out14-3-1-1.R, ARD_Out14-3-2-1.R, ARD_Out14-3-3-1a.R, ARD_Out14-3-3-1b.R) folder specified output_folder. successful, can execute 5 R scripts -(assuming ADaM required script available ADaM_folder), result ARD (one result per row format) scripts. example auto-generated ARD script included package, can used using ARD_script_exampe function. Running script look like :","code":"# example of 'cards' code in AnalysisMethodCodeTemplate, using the ard_continuous function:  Analysis_ARD = ard_continuous(   data = filtered_ADSL,   by = c(byvariables_here),   variables = analysisvariable_here ) ARS_example(\"cards_constructs.xlsx\") # Path to the Excel ARS metadata file:  ARS_path <- ARS_example(\"Common_Safety_Displays_cards.xlsx\")  # Path to a folder which will contain the Output meta-programmed R scripts (recommended to update # to a more suitable local path) output_folder <- tempdir()  # Path to the folder containing ADaM datasets in csv format (we will use temporary  # directory tempdir() to make the code run in this vignette, but it's recommended to  # 1. download the ADaMs required (csv ADSL and ADAE available using e.g. ARS_example(\"ADSL.csv\")) # 2. store it in a folder (the directly downloaded location can be found using dirname(ARS_example(\"ADSL.csv\")), for example.  Use this location, or manually store the ADaM somewhere else) # 3. use the folder path instead of tempdir() below. ADaM_folder <- tempdir()  # run the readARS function with these 3 parameters.  This creates R scripts  # (1 for each Output in output_folder) readARS(ARS_path, output_folder, ADaM_folder) # Step 1: open ARD_xxx.R file # Step 2: Confirm the location of ADaM dataset(s) is correct in the code section \"Load ADaM\".   # For the sake of simplicity, the only update made to the ARD_Out14-1-1.R  # script was to point to the ADaM folder to ARS_example(\"ADSL.csv\") # Step 3: Run the code and enjoy automated analysis results generation.  # Note: the ARD is contained in the object \"df4\" (which contains the appended) # mini-ARDs from all individual Analyses ARDs.  example_ARD_script = ARD_script_example(\"ARD_Out14-1-1.R\") source(example_ARD_script) head(df4)"},{"path":"https://clymbclinical.github.io/siera/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Malan Bosman. Author, maintainer. Clymb Clinical. Copyright holder, funder.","code":""},{"path":"https://clymbclinical.github.io/siera/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bosman M (2025). siera: Generate Analysis Results Programmes Using ARS Metadata. R package version 0.5.2, https://clymbclinical.github.io/siera/.","code":"@Manual{,   title = {siera: Generate Analysis Results Programmes Using ARS Metadata},   author = {Malan Bosman},   year = {2025},   note = {R package version 0.5.2},   url = {https://clymbclinical.github.io/siera/}, }"},{"path":[]},{"path":"https://clymbclinical.github.io/siera/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Generate Analysis Results Programmes Using ARS Metadata","text":"siera, users ingest Analysis Results Standard (ARS) metadata auto-generate R scripts , run corresponding ADaM datasets, provide Analysis Results Datasets (ARDs). CDISC Analysis Results Standard foundational standard facilitates automation, reproducibility, reusability traceability analysis results data. ARS metadata officially represented using JSON format (though also Excel representation easier readability, JSON format recommended official ARS usage). JSON file contains relevant metadata able calculate Analysis Results specific Reporting Event. metadata includes (limited ): Analysis Sets (e.g. SAFFL = “Y”) AnalysisGroupings (e.g. group Treatment) DataSubsets (e.g. filter Treatment-Emergent Adverse Events) AnalysisMethods (e.g. calculate ‘n’, ‘Mean’, ‘Min’, ‘Max’) Applying concepts ADaM input data, yields Analysis Results Dataset format (ARDs).","code":""},{"path":"https://clymbclinical.github.io/siera/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate Analysis Results Programmes Using ARS Metadata","text":"siera can installed CRAN : development version can installed Github using","code":"install.packages(\"siera\") #> package 'siera' successfully unpacked and MD5 sums checked #>  #> The downloaded binary packages are in #>  C:\\Users\\mbosm\\AppData\\Local\\Temp\\RtmpI3Rk9T\\downloaded_packages devtools::install_github(\"clymbclinical/siera\")"},{"path":"https://clymbclinical.github.io/siera/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Generate Analysis Results Programmes Using ARS Metadata","text":"siera package one main function, called readARS. function takes ARS metadata input (either JSON xlsx format), makes use various metadata pieces populate R scripts, run -produce ARDs. One R script created output (table) defined ARS metadata reportingg event. order make use function, following required arguments: functional ARS file, representing ARS Metadata Reporting Event (JSON xlsx) output directory R scripts placed folder containing related ADaM datasets ARDs generated See Getting Started vignette examples detail process.","code":""},{"path":"https://clymbclinical.github.io/siera/index.html","id":"more-info","dir":"","previous_headings":"Usage","what":"More info:","title":"Generate Analysis Results Programmes Using ARS Metadata","text":"US Connect 2025 Paper Clymb website - siera","code":""},{"path":"https://clymbclinical.github.io/siera/reference/ARD_script_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to example ARD scripts, auto-generated by siera — ARD_script_example","title":"Get path to example ARD scripts, auto-generated by siera — ARD_script_example","text":"siera comes bundled example ARD-producing scripts `inst/script` directory. function make easy access.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/ARD_script_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to example ARD scripts, auto-generated by siera — ARD_script_example","text":"","code":"ARD_script_example(path = NULL)"},{"path":"https://clymbclinical.github.io/siera/reference/ARD_script_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to example ARD scripts, auto-generated by siera — ARD_script_example","text":"path Name R file. `NULL`, example files listed.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/ARD_script_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to example ARD scripts, auto-generated by siera — ARD_script_example","text":"list example R files (path NULL), file path used.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/ARD_script_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to example ARD scripts, auto-generated by siera — ARD_script_example","text":"","code":"ARD_script_example() #> [1] \"ARD_Out14-1-1.R\" ARD_script_example(\"ARD_Out14-1-1.R\") #> [1] \"/home/runner/work/_temp/Library/siera/script/ARD_Out14-1-1.R\""},{"path":"https://clymbclinical.github.io/siera/reference/ARS_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to ARS example files — ARS_example","title":"Get path to ARS example files — ARS_example","text":"siera comes bundled example files `inst/extdata` directory. function make easy access.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/ARS_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to ARS example files — ARS_example","text":"","code":"ARS_example(path = NULL)"},{"path":"https://clymbclinical.github.io/siera/reference/ARS_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to ARS example files — ARS_example","text":"path Name file. `NULL`, example files listed.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/ARS_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to ARS example files — ARS_example","text":"list example files (path NULL), file path used.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/ARS_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to ARS example files — ARS_example","text":"","code":"ARS_example() #> [1] \"ADAE.csv\"                           \"ADSL.csv\"                           #> [3] \"ARS_V1_Common_Safety_Displays.json\" \"Common_Safety_Displays_cards.xlsx\"  #> [5] \"cards_constructs.xlsx\"              ARS_example(\"ARS_V1_Common_Safety_Displays.json\") #> [1] \"/home/runner/work/_temp/Library/siera/extdata/ARS_V1_Common_Safety_Displays.json\""},{"path":"https://clymbclinical.github.io/siera/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://clymbclinical.github.io/siera/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://clymbclinical.github.io/siera/reference/readARS.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"Ingest ARS (Analysis Results Standard) metadata, meta-programme R scripts run -produce Analysis Results Datasets ingesting ADaM datasets","code":""},{"path":"https://clymbclinical.github.io/siera/reference/readARS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"","code":"readARS(   ARS_path,   output_path = tempdir(),   adam_path = tempdir(),   spec_output = \"\",   spec_analysis = \"\",   example = FALSE,   shuffle = FALSE )"},{"path":"https://clymbclinical.github.io/siera/reference/readARS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"ARS_path file containing ARS metadata reporting event output_path Path store .R ARD scripts adam_path Path folder containing ADaM datasets, run ARD program spec_output output ID specific output run metadata spec_analysis analysis ID specific analysis run metadata example Default FALSE.  TRUE, example-based operations applied CDISC example ARS. FALSE, AnalysisMethodCodeTemplateCode expected source Method (Operations) code shuffle Default FALSE.  TRUE, shuffle_ard() applied binded final ARD, prepare tfrmt use case table generation","code":""},{"path":"https://clymbclinical.github.io/siera/reference/readARS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"R programmes generating ARDs - one output (analysis output) specified ARS metadata","code":""},{"path":"https://clymbclinical.github.io/siera/reference/readARS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"","code":"# path to file containing ARS metadata  ARS_path <- ARS_example(\"Common_Safety_Displays_cards.xlsx\")  # output path for R programs output_dir = tempdir()  # folder containing ADaM datasets adam_folder = tempdir()  # run function, write to temp directory readARS(ARS_path, output_dir, adam_folder)"},{"path":"https://clymbclinical.github.io/siera/news/index.html","id":"siera-052","dir":"Changelog","previous_headings":"","what":"siera 0.5.2","title":"siera 0.5.2","text":"CRAN release: 2025-08-25 Added conditional operators cover EQ, NE, GE, GT, LE, LT","code":""},{"path":"https://clymbclinical.github.io/siera/news/index.html","id":"siera-050","dir":"Changelog","previous_headings":"","what":"siera 0.5.0","title":"siera 0.5.0","text":"CRAN release: 2025-07-29 readARS function ingest xlsx, json CDISC example","code":""},{"path":"https://clymbclinical.github.io/siera/news/index.html","id":"siera-040","dir":"Changelog","previous_headings":"","what":"siera 0.4.0","title":"siera 0.4.0","text":"CRAN release: 2025-07-18 addition readARS_xl function example added {cards} AnalysisMethodCodeTemplate","code":""},{"path":"https://clymbclinical.github.io/siera/news/index.html","id":"siera-030","dir":"Changelog","previous_headings":"","what":"siera 0.3.0","title":"siera 0.3.0","text":"CRAN release: 2025-03-03 dynamic recognition ADaMs","code":""},{"path":"https://clymbclinical.github.io/siera/news/index.html","id":"siera-010","dir":"Changelog","previous_headings":"","what":"siera 0.1.0","title":"siera 0.1.0","text":"CRAN release: 2025-02-10 Initial CRAN submission.","code":""}]
