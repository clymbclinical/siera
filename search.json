[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 siera authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Malan Bosman. Author, maintainer. Clymb Clinical. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bosman M (2025). siera: Generate Analysis Results Programmes Using ARS Metadata. R package version 0.3.0.","code":"@Manual{,   title = {siera: Generate Analysis Results Programmes Using ARS Metadata},   author = {Malan Bosman},   year = {2025},   note = {R package version 0.3.0}, }"},{"path":"/index.html","id":"siera","dir":"","previous_headings":"","what":"Generate Analysis Results Programmes Using ARS Metadata","title":"Generate Analysis Results Programmes Using ARS Metadata","text":"looking way automate TFLs? siera, users ingest Analysis Results Standard - ARS (CDISC Foundational standard) metadata auto-generate R scripts , run provided ADaM datasets, provide Analysis Results Datasets (ARDs). order use readARS() function, users need provide following: Functional JSON file, representing ARS Metadata Reporting Event (get started, see TFL Designer) output directory R scripts placed folder containing related ADaM datasets ARDs generated","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate Analysis Results Programmes Using ARS Metadata","text":"current version (0.1.0) siera can installed CRAN :","code":"install.packages(\"siera\") #> package 'siera' successfully unpacked and MD5 sums checked #>  #> The downloaded binary packages are in #>  C:\\Users\\mbosm\\AppData\\Local\\Temp\\RtmpsTBaHn\\downloaded_packages"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Generate Analysis Results Programmes Using ARS Metadata","text":"siera includes several example files, use throughout documentation. include JSON ARS file, well csv ADaMs (ADSL ADAE) can run R scripts produced readARS function. Use helper ARS_example() arguments list call example filename get path. Next, ingest example json ARS file meta-programme ready--run R scripts, produce ARDs. R programs created, can individually run, provided ADaM datasets location provided readARS function.","code":"library(siera) # To see a list of example files: ARS_example() #> [1] \"ADAE.csv\"                           \"ADSL.csv\"                           #> [3] \"ARS_V1_Common_Safety_Displays.json\"  # A temporary path to a specific file: ARS_example(\"ARS_V1_Common_Safety_Displays.json\") #> [1] \"C:/Users/mbosm/AppData/Local/Temp/RtmpmME8pc/temp_libpath3f08e0d63c1/siera/extdata/ARS_V1_Common_Safety_Displays.json\" # Path to the the ARS JSON File.  json_path <- ARS_example(\"ARS_V1_Common_Safety_Displays.json\")  # Path to a folder which will contain the meta-programmed R scripts (feel free to update  # to a more suitable path) output_folder <- tempdir()  # this folder contains ADaM datasets to produce ARD (we will use temporary  # directory tempdir(), but feel free to download the ADaMs required and use the location they are stored in. # This can be done with e.g. dirname(ARS_example(\"ADSL.csv\")) ADaM_folder <- tempdir()  # run the readARS function with these 3 parameters.  This creates R scripts (1 for each output in output_folder) readARS(json_path, output_folder, ADaM_folder)"},{"path":"/reference/ARS_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to ARS JSON example — ARS_example","title":"Get path to ARS JSON example — ARS_example","text":"siera comes bundled example files `inst/extdata` directory. function make easy access.","code":""},{"path":"/reference/ARS_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to ARS JSON example — ARS_example","text":"","code":"ARS_example(path = NULL)"},{"path":"/reference/ARS_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to ARS JSON example — ARS_example","text":"path Name file. `NULL`, example files listed.","code":""},{"path":"/reference/ARS_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to ARS JSON example — ARS_example","text":"list example files (path NULL), file path used.","code":""},{"path":"/reference/ARS_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to ARS JSON example — ARS_example","text":"","code":"ARS_example() #> [1] \"ADAE.csv\"                           \"ADSL.csv\"                           #> [3] \"ARS_V1_Common_Safety_Displays.json\" ARS_example(\"ARS_V1_Common_Safety_Displays.json\") #> [1] \"/home/runner/work/_temp/Library/siera/extdata/ARS_V1_Common_Safety_Displays.json\""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/readARS.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"Ingest JSON xlsx ARS (Analysis Results Standard) metadata, meta-programme R scripts run -produce Analysis Results Datasets ingesting ADaM datasets","code":""},{"path":"/reference/readARS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"","code":"readARS(JSON_ARS, output_path = tempdir(), adam_path = tempdir())"},{"path":"/reference/readARS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"JSON_ARS JSON file containing ARS metadata reporting event output_path Path store .R ARD scripts adam_path Path folder containing ADaM datasets, run ARD program","code":""},{"path":"/reference/readARS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"R programmes generating ARDs - one output specificied ARS JSON","code":""},{"path":"/reference/readARS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ingest ARS (Analysis Results Standard) metadata, produce ARD (Analysis Results Dataset) code for each output — readARS","text":"","code":"# path to JSON file containing ARS metadata  json_path <- ARS_example(\"ARS_V1_Common_Safety_Displays.json\")  # output path for R programs output_dir = tempdir()  # folder containing ADaM datasets adam_folder = tempdir()  # run function, write to temp directory readARS(json_path, output_dir, adam_folder)"},{"path":"/news/index.html","id":"siera-030","dir":"Changelog","previous_headings":"","what":"siera 0.3.0","title":"siera 0.3.0","text":"dynamic recognition ADaMs","code":""},{"path":"/news/index.html","id":"siera-010","dir":"Changelog","previous_headings":"","what":"siera 0.1.0","title":"siera 0.1.0","text":"CRAN release: 2025-02-10 Initial CRAN submission.","code":""}]
